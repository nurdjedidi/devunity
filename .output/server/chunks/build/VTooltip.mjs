globalThis.__timing__.logStart('Load chunks/build/VTooltip');import { computed, ref, mergeProps, createVNode } from 'vue';
import { f as y, y as y$1, C, a4 as t, ah as o, as as d, o as o$1, aQ as it, az as M, aR as Re } from './server.mjs';

const I=y$1({id:String,text:String,...M(Re({closeOnBack:false,location:"end",locationStrategy:"connected",eager:true,minWidth:0,offset:10,openOnClick:false,openOnHover:true,origin:"auto",scrim:false,scrollStrategy:"reposition",transition:false}),["absolute","persistent"])},"VTooltip"),q=y()({name:"VTooltip",props:I(),emits:{"update:modelValue":t=>true},setup(t$1,m){let{slots:n}=m;const r=C(t$1,"modelValue"),{scopeId:d$1}=t(),f=o(),a=computed(()=>t$1.id||`v-tooltip-${f}`),l=ref(),v=computed(()=>t$1.location.split(" ").length>1?t$1.location:t$1.location+" center"),g=computed(()=>t$1.origin==="auto"||t$1.origin==="overlap"||t$1.origin.split(" ").length>1||t$1.location.split(" ").length>1?t$1.origin:t$1.origin+" center"),p=computed(()=>t$1.transition?t$1.transition:r.value?"scale-transition":"fade-transition"),V=computed(()=>mergeProps({"aria-describedby":a.value},t$1.activatorProps));return o$1(()=>{const P=it.filterProps(t$1);return createVNode(it,mergeProps({ref:l,class:["v-tooltip",t$1.class],style:t$1.style,id:a.value},P,{modelValue:r.value,"onUpdate:modelValue":e=>r.value=e,transition:p.value,absolute:true,location:v.value,origin:g.value,persistent:true,role:"tooltip",activatorProps:V.value,_disableGlobalStack:true},d$1),{activator:n.activator,default:function(){for(var e=arguments.length,s=new Array(e),i=0;i<e;i++)s[i]=arguments[i];return n.default?.(...s)??t$1.text}})}),d({},l)}});

export { q };;globalThis.__timing__.logEnd('Load chunks/build/VTooltip');
