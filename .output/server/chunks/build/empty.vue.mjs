globalThis.__timing__.logStart('Load chunks/build/empty.vue');import { s as s$1, c5 as w } from './server.mjs';
import { useSSRContext } from 'vue';
import { ssrRenderComponent } from 'vue/server-renderer';
import '../_/nitro.mjs';
import 'node:http';
import 'node:https';
import 'node:events';
import 'node:buffer';
import 'node:fs';
import 'node:path';
import 'node:crypto';
import 'node:async_hooks';
import 'jsonwebtoken';
import 'sqlstring';
import 'net';
import 'tls';
import 'timers';
import 'events';
import 'stream';
import 'denque';
import 'lru.min';
import 'buffer';
import 'long';
import 'iconv-lite';
import 'process';
import 'crypto';
import 'zlib';
import 'seq-queue';
import 'generate-function';
import 'url';
import 'aws-ssl-profiles';
import 'named-placeholders';
import 'pinia';
import 'vue-router';
import 'deep-pick-omit';

const o={};function c(n,e,t,r){e(ssrRenderComponent(w,r,null,t));}const s=o.setup;o.setup=(n,e)=>{const t=useSSRContext();return (t.modules||(t.modules=new Set)).add("layouts/empty.vue"),s?s(n,e):void 0};const l=s$1(o,[["ssrRender",c]]);

export { l as default };;globalThis.__timing__.logEnd('Load chunks/build/empty.vue');
